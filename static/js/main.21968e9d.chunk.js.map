{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","pressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,QAAS,IAFb,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,cAN5C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,cAVjD,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIT,EAAO,mCACyBA,EADzB,KAEH,kCA1BhB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.21968e9d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  message: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    message: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.pressedKey);\n  }\n\n  pressedKey = (event: KeyboardEvent) => {\n    this.setState({ message: event.key });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            message\n              ? `The last pressed key is [${message}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}